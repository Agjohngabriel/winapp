// <auto-generated />
using System;
using AutoConnect.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AutoConnect.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutoConnect.Core.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastConnectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastKnownIpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VpnCertificate")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutoConnect.Core.Entities.VehicleData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("BatteryVoltage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("CoolantTemperature")
                        .HasColumnType("decimal(5,1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiagnosticTroubleCodes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int?>("EngineRPM")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FuelLevel")
                        .HasColumnType("decimal(5,1)");

                    b.Property<int>("IgnitionStatus")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("KL15Voltage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("KL30Voltage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("RawObdData")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("VehicleSessionId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("VehicleSpeed")
                        .HasColumnType("decimal(5,1)");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.HasIndex("VehicleSessionId", "Timestamp");

                    b.ToTable("VehicleData");
                });

            modelBuilder.Entity("AutoConnect.Core.Entities.VehicleSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<int>("ConnectionStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("DataUsageMB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastDataReceivedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastErrorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ObdAdapterType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ObdProtocol")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("PingLatencyMs")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SessionEndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("SessionStartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VIN")
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)");

                    b.HasKey("Id");

                    b.HasIndex("VIN");

                    b.HasIndex("ClientId", "SessionStartedAt");

                    b.ToTable("VehicleSessions");
                });

            modelBuilder.Entity("AutoConnect.Core.Entities.VehicleData", b =>
                {
                    b.HasOne("AutoConnect.Core.Entities.VehicleSession", "VehicleSession")
                        .WithMany("VehicleDataPoints")
                        .HasForeignKey("VehicleSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleSession");
                });

            modelBuilder.Entity("AutoConnect.Core.Entities.VehicleSession", b =>
                {
                    b.HasOne("AutoConnect.Core.Entities.Client", "Client")
                        .WithMany("VehicleSessions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AutoConnect.Core.Entities.Client", b =>
                {
                    b.Navigation("VehicleSessions");
                });

            modelBuilder.Entity("AutoConnect.Core.Entities.VehicleSession", b =>
                {
                    b.Navigation("VehicleDataPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
