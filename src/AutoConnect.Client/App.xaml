<Application x:Class="AutoConnect.Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:converters="clr-namespace:AutoConnect.Client.Converters">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Modern WPF Theme -->
                <ui:ThemeResources />
                <ui:XamlControlsResources />

                <!-- Custom Resources -->
                <ResourceDictionary>
                    <!-- Value Converters -->
                    <converters:BoolToConnectedConverter x:Key="BoolToConnectedConverter"/>
                    <converters:BoolToInterfaceConverter x:Key="BoolToInterfaceConverter"/>
                    <converters:BoolToStatusBrushConverter x:Key="BoolToStatusBrushConverter"/>
                    <converters:StatusToColorConverter x:Key="StatusToColorConverter"/>
                    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                    <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
                    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>

                    <!-- AutoConnect Color Palette -->

                    <!-- Background Colors -->
                    <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="#1A1D23"/>
                    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="#252A32"/>
                    <SolidColorBrush x:Key="TertiaryBackgroundBrush" Color="#2D3441"/>
                    <SolidColorBrush x:Key="CardBackgroundBrush" Color="#1E232A"/>

                    <!-- Text Colors -->
                    <SolidColorBrush x:Key="PrimaryTextBrush" Color="#FFFFFF"/>
                    <SolidColorBrush x:Key="SecondaryTextBrush" Color="#B4BCC8"/>
                    <SolidColorBrush x:Key="TertiaryTextBrush" Color="#8A9BA8"/>
                    <SolidColorBrush x:Key="AccentTextBrush" Color="#4A9EFF"/>

                    <!-- Status Colors -->
                    <SolidColorBrush x:Key="SuccessBrush" Color="#22C55E"/>
                    <SolidColorBrush x:Key="WarningBrush" Color="#F59E0B"/>
                    <SolidColorBrush x:Key="ErrorBrush" Color="#EF4444"/>
                    <SolidColorBrush x:Key="InfoBrush" Color="#3B82F6"/>

                    <!-- Accent Colors -->
                    <SolidColorBrush x:Key="PrimaryAccentBrush" Color="#4A9EFF"/>
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#10B981"/>
                    <SolidColorBrush x:Key="TertiaryAccentBrush" Color="#8B5CF6"/>

                    <!-- Border Colors -->
                    <SolidColorBrush x:Key="PrimaryBorderBrush" Color="#3A4553"/>
                    <SolidColorBrush x:Key="SecondaryBorderBrush" Color="#4B5563"/>
                    <SolidColorBrush x:Key="AccentBorderBrush" Color="#4A9EFF"/>

                    <!-- Interactive Colors -->
                    <SolidColorBrush x:Key="HoverBrush" Color="#374151"/>
                    <SolidColorBrush x:Key="PressedBrush" Color="#1F2937"/>
                    <SolidColorBrush x:Key="DisabledBrush" Color="#6B7280"/>
                    
                    <!-- Error/Status Background Colors -->
                    <SolidColorBrush x:Key="ErrorBackgroundBrush" Color="#451A1A"/>
                    <SolidColorBrush x:Key="WarningBackgroundBrush" Color="#451A03"/>
                    <SolidColorBrush x:Key="SuccessBackgroundBrush" Color="#14532D"/>

                    <!-- Navigation Button Style -->
                    <Style x:Key="NavigationButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="20,12"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="6"
                                            Margin="10,2">
                                        <ContentPresenter x:Name="contentPresenter"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Margin="{TemplateBinding Padding}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{StaticResource HoverBrush}"/>
                                            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{StaticResource PressedBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Accent Button Style -->
                    <Style x:Key="AccentButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="{StaticResource PrimaryAccentBrush}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="16,8"/>
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="CornerRadius" Value="6"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{TemplateBinding CornerRadius}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Margin="{TemplateBinding Padding}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Secondary Button Style -->
                    <Style x:Key="SecondaryButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="{StaticResource TertiaryBackgroundBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBorderBrush}"/>
                        <Setter Property="Padding" Value="16,8"/>
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="CornerRadius" Value="6"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{TemplateBinding CornerRadius}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Margin="{TemplateBinding Padding}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{StaticResource HoverBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{StaticResource PressedBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Danger Button Style -->
                    <Style x:Key="DangerButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="{StaticResource ErrorBrush}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="16,8"/>
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="CornerRadius" Value="6"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{TemplateBinding CornerRadius}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Margin="{TemplateBinding Padding}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>